{"ast":null,"code":"var _jsxFileName = \"/home/matt/Documents/new-personal-projects/e-commerce/src/components/ProductDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useGlobalContext } from '../context/Context';\nimport axios from \"axios\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { getByPlaceholderText } from '@testing-library/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Products = () => {\n  _s();\n\n  const productId = useParams();\n  const {\n    filtered,\n    redirect,\n    setRedirect,\n    cart,\n    setCart,\n    getCart\n  } = useGlobalContext();\n  const [singleProductId, setSingleProductId] = useState([]);\n  const navigate = useNavigate(); // get products for product details page\n\n  useEffect(() => {\n    let abortController = new AbortController();\n    axios.get(`http://localhost:8001/products/${productId.productId}`).then(res => {\n      return res;\n    }).then(res => {\n      setSingleProductId([res.data.id]);\n      return res;\n    }).catch(err => {\n      console.log(err);\n    });\n    return () => abortController();\n  }, [productId.id]); // send post request to add item to cart, set redirect state to true.\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setRedirect(true);\n    let request = {\n      method: 'POST',\n      url: \"http://localhost:8001/cart\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: {\n        productId: singleProductId[0]\n      }\n    };\n    axios(request).then(res => {\n      return res;\n    }).catch(err => console.log(err));\n  }; // redirects to Cart page based on whether redirect state is sett to true/false. redirect is then reset to false.\n\n\n  useEffect(() => {\n    if (redirect) {\n      navigate('/cart');\n      setRedirect(false);\n    }\n\n    return () => abortController();\n  }, [cart]);\n  const productDetails = filtered.filter(product => {\n    return singleProductId == product.id;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: productDetails.map(product => {\n      const {\n        id,\n        title,\n        description,\n        medImageUrl,\n        imageUrl,\n        price,\n        category\n      } = product;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-details-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"product-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: `${title.substring(0, 100)}`.toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"product-details-image\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: medImageUrl,\n              alt: \"description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 23\n          }, this), \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"product-details-right-sidebar\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Price: $\", price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmit,\n            children: \"Add to cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 2\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 1\n      }, this);\n    })\n  }, void 0, false);\n};\n\n_s(Products, \"qdaTCAyFbVEK7xTahZsnk7cLfBM=\", false, function () {\n  return [useParams, useGlobalContext, useNavigate];\n});\n\n_c = Products;\nexport default Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/home/matt/Documents/new-personal-projects/e-commerce/src/components/ProductDetails.js"],"names":["React","useState","useRef","useEffect","useGlobalContext","axios","useNavigate","useParams","getByPlaceholderText","Products","productId","filtered","redirect","setRedirect","cart","setCart","getCart","singleProductId","setSingleProductId","navigate","abortController","AbortController","get","then","res","data","id","catch","err","console","log","handleSubmit","e","preventDefault","request","method","url","headers","productDetails","filter","product","map","title","description","medImageUrl","imageUrl","price","category","substring","toUpperCase"],"mappings":";;;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,SAAjC,QAAiD,OAAjD;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;AACA,SAASC,oBAAT,QAAqC,wBAArC;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACvB,QAAMC,SAAS,GAAGH,SAAS,EAA3B;AACA,QAAM;AAAEI,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA,WAAtB;AAAmCC,IAAAA,IAAnC;AAAyCC,IAAAA,OAAzC;AAAkDC,IAAAA;AAAlD,MAA6DZ,gBAAgB,EAAnF;AACI,QAAM,CAACa,eAAD,EAAkBC,kBAAlB,IAAwCjB,QAAQ,CAAC,EAAD,CAAtD;AAEF,QAAMkB,QAAQ,GAAGb,WAAW,EAA5B,CALqB,CAOnB;;AACIH,EAAAA,SAAS,CAAC,MAAK;AACT,QAAIiB,eAAe,GAAG,IAAIC,eAAJ,EAAtB;AACFhB,IAAAA,KAAK,CAACiB,GAAN,CAAW,kCAAiCZ,SAAS,CAACA,SAAU,EAAhE,EACCa,IADD,CACMC,GAAG,IAAI;AACjB,aAAOA,GAAP;AACI,KAHA,EAGED,IAHF,CAGOC,GAAG,IAAI;AACfN,MAAAA,kBAAkB,CAAC,CAACM,GAAG,CAACC,IAAJ,CAASC,EAAV,CAAD,CAAlB;AACK,aAAOF,GAAP;AACH,KAND,EAOCG,KAPD,CAOOC,GAAG,IAAG;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KATD;AAUA,WAAO,MAAMR,eAAe,EAA5B;AACH,GAbQ,EAaN,CAACV,SAAS,CAACgB,EAAX,CAbM,CAAT,CARe,CAuBvB;;AACI,QAAMK,YAAY,GAAIC,CAAC,IAAI;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACApB,IAAAA,WAAW,CAAC,IAAD,CAAX;AACA,QAAIqB,OAAO,GAAG;AAACC,MAAAA,MAAM,EAAE,MAAT;AACNC,MAAAA,GAAG,EAAE,4BADC;AAENC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFH;AAKNZ,MAAAA,IAAI,EAAE;AACHf,QAAAA,SAAS,EAAEO,eAAe,CAAC,CAAD;AADvB;AALA,KAAd;AAOQZ,IAAAA,KAAK,CAAC6B,OAAD,CAAL,CACKX,IADL,CACUC,GAAG,IAAI;AACb,aAAOA,GAAP;AACC,KAHL,EAIHG,KAJG,CAIGC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJV;AAI4B,GAdpC,CAxBmB,CAwCf;;;AACDzB,EAAAA,SAAS,CAAC,MAAM;AACX,QAAIS,QAAJ,EAAc;AACZO,MAAAA,QAAQ,CAAC,OAAD,CAAR;AACAN,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD;;AACD,WAAO,MAAMO,eAAe,EAA5B;AACH,GANO,EAML,CAACN,IAAD,CANK,CAAT;AAQP,QAAMwB,cAAc,GAAG3B,QAAQ,CAAC4B,MAAT,CAAiBC,OAAD,IAAa;AAE7C,WAAOvB,eAAe,IAAIuB,OAAO,CAACd,EAAlC;AACF,GAHkB,CAAvB;AAIE,sBACF;AAAA,cACEY,cAAc,CAACG,GAAf,CAAmBD,OAAO,IAAI;AAC5B,YAAM;AAACd,QAAAA,EAAD;AAAKgB,QAAAA,KAAL;AAAYC,QAAAA,WAAZ;AAAyBC,QAAAA,WAAzB;AAAsCC,QAAAA,QAAtC;AAAgDC,QAAAA,KAAhD;AAAuDC,QAAAA;AAAvD,UAAmEP,OAAzE;AACA,0BACJ;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCAEU;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACD;AAAA,sBAAM,GAAEE,KAAK,CAACM,SAAN,CAAgB,CAAhB,EAAmB,GAAnB,CAAwB,EAA3B,CAA6BC,WAA7B;AAAL;AAAA;AAAA;AAAA;AAAA,kBADC,eAEY;AAAK,YAAA,SAAS,EAAC,uBAAf;AAAA,mCAEV;AAAK,cAAA,GAAG,EAAEL,WAAV;AAAuB,cAAA,GAAG,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA;AAFU;AAAA;AAAA;AAAA;AAAA,kBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFV,eAUC;AAAK,UAAA,SAAS,EAAC,+BAAf;AAAA,kCACD;AAAA,mCAAaE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA,kBADC,eAGD;AAAA,sBAAIH;AAAJ;AAAA;AAAA;AAAA;AAAA,kBAHC,eAMD;AAAQ,YAAA,OAAO,EAAEZ,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVD;AAAA;AAAA;AAAA;AAAA;AAAA,cADI;AAsBC,KAxBH;AADF,mBADE;AAgCD,CArFD;;GAAMtB,Q;UACYF,S,EACiDH,gB,EAGhDE,W;;;KALbG,Q;AAuFN,eAAeA,QAAf","sourcesContent":["\nimport React, {useState, useRef, useEffect} from 'react';\nimport { useGlobalContext } from '../context/Context';\nimport axios from \"axios\";    \nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { getByPlaceholderText } from '@testing-library/react';\n\nconst Products = () => {\nconst productId = useParams();\nconst { filtered, redirect, setRedirect, cart, setCart, getCart} = useGlobalContext()\n    const [singleProductId, setSingleProductId] = useState([])\n\n  const navigate = useNavigate();\n\n    // get products for product details page\n        useEffect(()=> {\n              let abortController = new AbortController();  \n            axios.get(`http://localhost:8001/products/${productId.productId}`)\n            .then(res => {\n        return res\n           }).then(res => {\n           setSingleProductId([res.data.id])  \n                return res\n            })\n            .catch(err =>{\n                console.log(err)\n            })\n            return () => abortController()\n        }, [productId.id])\n\n// send post request to add item to cart, set redirect state to true.\n    const handleSubmit =  e => {\n    e.preventDefault();\n    setRedirect(true)\n    let request = {method: 'POST',\n            url: \"http://localhost:8001/cart\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            data: {\n               productId: singleProductId[0]}}\n            axios(request)\n                .then(res => {\n                return res\n                })   \n        .catch(err => console.log(err))};\n\n        // redirects to Cart page based on whether redirect state is sett to true/false. redirect is then reset to false.\n       useEffect(() => {\n            if (redirect) {\n              navigate('/cart')\n              setRedirect(false)\n            }\n            return () => abortController()\n        }, [cart])\n\nconst productDetails = filtered.filter((product) => {\n\n       return singleProductId == product.id\n    })\n  return (\n<>\n {productDetails.map(product => {\n    const {id, title, description, medImageUrl, imageUrl, price, category} = product;\n    return (\n<div className='product-details-main'>\n\n          <div className='product-details'>\n         <h2>{`${title.substring(0, 100)}`.toUpperCase()}</h2>\n                      <div className='product-details-image'>\n\n            <img src={medImageUrl} alt=\"description\" />\n        </div>  </div>\n   \n\n <div className=\"product-details-right-sidebar\">\n<h2>Price: ${price}</h2>\n\n<p>{description}\n</p>\n\n<button onClick={handleSubmit}>Add to cart</button>\n\n\n</div>\n</div>\n  ) })}      \n   \n\n    \n</>\n  );\n};\n\nexport default Products;\n\n\n\n"]},"metadata":{},"sourceType":"module"}