{"ast":null,"code":"var _jsxFileName = \"/home/matt/Documents/new-personal-projects/e-commerce/src/context/ProductsContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useCallback, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst url = 'https://fakestoreapi.com/products/category/electronics'; // api where data will be fetched from\n\nconst AppContext = /*#__PURE__*/React.createContext();\n\nconst AppProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [loading, isLoading] = useState(false); // sets up state for Loading component\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const [products, setProducts] = useState([]);\n\n  const getProducts = async () => {\n    isLoading(true);\n\n    try {\n      const data = await axios.get(url);\n      const newProducts = data.data;\n      setProducts(newProducts);\n      isLoading(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getProducts();\n  }, []);\n  console.log(products);\n  useEffect(() => {\n    let filtered = products.filter(product => {\n      product.title.includes(searchTerm);\n    });\n  }, [searchValue]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n      value: {\n        loading,\n        searchTerm,\n        products,\n        setProducts,\n        setSearchTerm\n      },\n      children: [\" \", children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(AppProvider, \"DIH+jzzWTB8MR3C/Hf+5+gneU9Y=\");\n\n_c = AppProvider;\nexport const useGlobalContext = () => {\n  _s2();\n\n  return useContext(AppContext);\n};\n\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { AppContext, AppProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"sources":["/home/matt/Documents/new-personal-projects/e-commerce/src/context/ProductsContext.js"],"names":["axios","React","useState","useCallback","useContext","useEffect","url","AppContext","createContext","AppProvider","children","loading","isLoading","searchTerm","setSearchTerm","products","setProducts","getProducts","data","get","newProducts","error","console","log","filtered","filter","product","title","includes","searchValue","useGlobalContext"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,WAAzB,EAAsCC,UAAtC,EAAkDC,SAAlD,QAAkE,OAAlE;;;AAEA,MAAMC,GAAG,GAAE,wDAAX,C,CACA;;AAEA,MAAMC,UAAU,gBAAGN,KAAK,CAACO,aAAN,EAAnB;;AAEA,MAAMC,WAAW,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAE5B,QAAM,CAACC,OAAD,EAAUC,SAAV,IAAuBV,QAAQ,CAAC,KAAD,CAArC,CAF4B,CAG5B;;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;;AAGA,QAAMe,WAAW,GAAE,YAAY;AAC/BL,IAAAA,SAAS,CAAC,IAAD,CAAT;;AACA,QAAI;AACJ,YAAMM,IAAI,GAAG,MAAMlB,KAAK,CAACmB,GAAN,CAAUb,GAAV,CAAnB;AACA,YAAMc,WAAW,GAAGF,IAAI,CAACA,IAAzB;AACAF,MAAAA,WAAW,CAACI,WAAD,CAAX;AACAR,MAAAA,SAAS,CAAC,KAAD,CAAT;AACC,KALD,CAKG,OAAMS,KAAN,EAAa;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACC;AAAE,GATH;;AAWAhB,EAAAA,SAAS,CAAC,MAAM;AAChBY,IAAAA,WAAW;AAEV,GAHQ,EAGN,EAHM,CAAT;AAIAK,EAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AAEGV,EAAAA,SAAS,CAAC,MAAM;AAClB,QAAImB,QAAQ,GAAET,QAAQ,CAACU,MAAT,CAAiBC,OAAD,IAAa;AAACA,MAAAA,OAAO,CAACC,KAAR,CAAcC,QAAd,CAAuBf,UAAvB;AAAmC,KAAjE,CAAd;AAGN,GAJiB,EAIf,CAACgB,WAAD,CAJe,CAAT;AAMP,sBAAM;AAAA,2BACN,QAAC,UAAD,CAAY,QAAZ;AAAqB,MAAA,KAAK,EAAE;AACxBlB,QAAAA,OADwB;AAExBE,QAAAA,UAFwB;AAGxBE,QAAAA,QAHwB;AAIxBC,QAAAA,WAJwB;AAKxBF,QAAAA;AALwB,OAA5B;AAAA,sBAMKJ,QANL;AAAA;AAAA;AAAA;AAAA;AAAA;AADM,mBAAN;AAUH,CAzCD;;GAAMD,W;;KAAAA,W;AA2CN,OAAO,MAAMqB,gBAAgB,GAAG,MAAM;AAAA;;AACtC,SAAO1B,UAAU,CAACG,UAAD,CAAjB;AACC,CAFM;;IAAMuB,gB;;AAIb,SAAQvB,UAAR,EAAoBE,WAApB","sourcesContent":["import axios from 'axios'\nimport React, {useState, useCallback, useContext, useEffect} from 'react'\n\nconst url ='https://fakestoreapi.com/products/category/electronics';\n// api where data will be fetched from\n\nconst AppContext = React.createContext();\n\nconst AppProvider = ({children}) => {\n\n        const [loading, isLoading] = useState(false)\n        // sets up state for Loading component\n        const [searchTerm, setSearchTerm] = useState('')\n        const [products, setProducts] = useState([])\n\n    \n        const getProducts =async () => {\n        isLoading(true)\n        try {\n        const data = await axios.get(url);\n        const newProducts = data.data;\n        setProducts(newProducts)\n        isLoading(false)\n        }  catch(error) {\n        console.log(error);\n        } }\n\n        useEffect(() => {\n        getProducts()\n        \n        }, [])\n        console.log(products)\n\n           useEffect(() => {\n         let filtered= products.filter((product) => {product.title.includes(searchTerm)})\n\n   \n  }, [searchValue])\n\n    return<>\n    <AppContext.Provider value={{\n        loading,\n        searchTerm,\n        products,\n        setProducts,\n        setSearchTerm\n    }}> {children}\n    </AppContext.Provider>\n    </>\n}\n\nexport const useGlobalContext = () => {\nreturn useContext(AppContext)\n}\n\nexport {AppContext, AppProvider}"]},"metadata":{},"sourceType":"module"}