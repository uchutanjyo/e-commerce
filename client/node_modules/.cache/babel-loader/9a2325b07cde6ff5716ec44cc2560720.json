{"ast":null,"code":"var _jsxFileName = \"/home/matt/Documents/new-personal-projects/e-commerce/client/src/components/ProductsContainer.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useGlobalContext } from '../context/Context';\nimport Product from './Product';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductsContainer = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const {\n    loading,\n    currentFiltered,\n    searchTerm\n  } = useGlobalContext();\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"products\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 10\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"products\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"products-container\",\n        children: currentFiltered.filter(product => {\n          if (searchTerm != '') {\n            return product.title.includes(searchTerm.toLowerCase());\n          } else {\n            return product;\n          }\n        }).map(product => {\n          const {\n            id,\n            title,\n            description,\n            imageUrl,\n            price,\n            category\n          } = product;\n          return /*#__PURE__*/_jsxDEV(Product, {\n            id: id,\n            title: title,\n            description: description,\n            imageUrl: imageUrl,\n            price: price,\n            category: category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 1\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 2\n    }, this)\n  }, void 0, false);\n};\n\n_s(ProductsContainer, \"vXXTKF6cBVIj1qiyG8roPCzgFrE=\", false, function () {\n  return [useGlobalContext];\n});\n\n_c = ProductsContainer;\nexport default ProductsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductsContainer\");","map":{"version":3,"sources":["/home/matt/Documents/new-personal-projects/e-commerce/client/src/components/ProductsContainer.js"],"names":["React","useGlobalContext","Product","ProductsContainer","children","loading","currentFiltered","searchTerm","filter","product","title","includes","toLowerCase","map","id","description","imageUrl","price","category"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;;;;AAEA,MAAMC,iBAAiB,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAC1C,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,eAAV;AAA2BC,IAAAA;AAA3B,MAAyCN,gBAAgB,EAA/D;;AAEA,MAAII,OAAJ,EAAa;AACX,wBAAO;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACC;AAAA,2BAEA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACG;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,kBACHC,eAAe,CAACE,MAAhB,CAAwBC,OAAO,IAAI;AAClC,cAAIF,UAAU,IAAI,EAAlB,EAAsB;AACxB,mBAAOE,OAAO,CAACC,KAAR,CAAcC,QAAd,CAAuBJ,UAAU,CAACK,WAAX,EAAvB,CAAP;AAAyD,WADvD,MAEG;AACH,mBAAOH,OAAP;AAAe;AACd,SALF,EAOAI,GAPA,CAOKJ,OAAD,IAAa;AACd,gBAAM;AAACK,YAAAA,EAAD;AAAKJ,YAAAA,KAAL;AAAYK,YAAAA,WAAZ;AAAyBC,YAAAA,QAAzB;AAAmCC,YAAAA,KAAnC;AAA0CC,YAAAA;AAA1C,cAAsDT,OAA5D;AACG,8BACP,QAAC,OAAD;AAAS,YAAA,EAAE,EAAEK,EAAb;AAAiB,YAAA,KAAK,EAAEJ,KAAxB;AAA+B,YAAA,WAAW,EAAEK,WAA5C;AAAyD,YAAA,QAAQ,EAAEC,QAAnE;AAA6E,YAAA,KAAK,EAAEC,KAApF;AAA2F,YAAA,QAAQ,EAAEC;AAArG;AAAA;AAAA;AAAA;AAAA,kBADO;AAEL,SAXD;AADG;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA;AAFA,mBADD;AAqBC,CA3BD;;GAAMf,iB;UACyCF,gB;;;KADzCE,iB;AA6BN,eAAeA,iBAAf","sourcesContent":["\nimport React from 'react';\nimport { useGlobalContext } from '../context/Context';\nimport Product from './Product'\n\nconst ProductsContainer = ({children}) => {\nconst {loading, currentFiltered, searchTerm} = useGlobalContext()\n\nif (loading) {\n  return <div className='products'>Loading...</div>\n}\nreturn (\n <>\n\n <div className='products'>\n    <div className='products-container'>\n{currentFiltered.filter((product => {\n  if (searchTerm != '') {\nreturn product.title.includes(searchTerm.toLowerCase()) }\nelse {\n  return product}\n  }\n))\n.map((product) => {\n    const {id, title, description, imageUrl, price, category} = product;\n       return (\n<Product id={id} title={title} description={description} imageUrl={imageUrl} price={price} category={category}></Product>\n)}\n  )}\n</div></div>\n </>\n  );\n};\n\nexport default ProductsContainer;\n"]},"metadata":{},"sourceType":"module"}