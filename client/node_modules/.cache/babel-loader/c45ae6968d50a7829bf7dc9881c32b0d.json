{"ast":null,"code":"var _jsxFileName = \"/home/matt/Documents/new-personal-projects/e-commerce/src/components/SearchForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { useGlobalContext } from '../context/ProductsContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchForm = () => {\n  _s();\n\n  const {\n    setSearchTerm,\n    searchTerm,\n    products,\n    setProducts,\n    filtered,\n    oldProducts\n  } = useGlobalContext();\n  const searchValue = useRef(''); // sets up reference with name searchValue . initial state is an empty array\n\n  const searchProduct = () => {\n    setSearchTerm(searchValue.current.value);\n\n    if (searchTerm != '') {\n      setProducts(filtered);\n      console.log(products);\n    } // function which sets the searchTerm state as the current value of whatever the reference will be (coming up below)\n\n  };\n\n  React.useEffect(() => {\n    searchValue.current.focus();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SearchForm\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"input\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"search\",\n        id: \"name\",\n        ref: searchValue,\n        onChange: searchProduct\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 2\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchForm, \"+7iKaOuPdxYlKDwlWJ6Y2uWuSFM=\", false, function () {\n  return [useGlobalContext];\n});\n\n_c = SearchForm;\nexport default SearchForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchForm\");","map":{"version":3,"sources":["/home/matt/Documents/new-personal-projects/e-commerce/src/components/SearchForm.js"],"names":["React","useRef","useGlobalContext","SearchForm","setSearchTerm","searchTerm","products","setProducts","filtered","oldProducts","searchValue","searchProduct","current","value","console","log","useEffect","focus"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,MAAf,QAA4B,OAA5B;AACA,SAASC,gBAAT,QAAiC,4BAAjC;;;AAGA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAM;AAACC,IAAAA,aAAD;AAAgBC,IAAAA,UAAhB;AAA4BC,IAAAA,QAA5B;AAAsCC,IAAAA,WAAtC;AAAkDC,IAAAA,QAAlD;AAA4DC,IAAAA;AAA5D,MAA2EP,gBAAgB,EAAjG;AAEI,QAAMQ,WAAW,GAAGT,MAAM,CAAC,EAAD,CAA1B,CAHiB,CAIjB;;AAEJ,QAAMU,aAAa,GAAG,MAAM;AAExBP,IAAAA,aAAa,CAACM,WAAW,CAACE,OAAZ,CAAoBC,KAArB,CAAb;;AAEI,QAAIR,UAAU,IAAI,EAAlB,EAAsB;AAC1BE,MAAAA,WAAW,CAACC,QAAD,CAAX;AAEAM,MAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ;AAAuB,KAPC,CAQxB;;AACH,GATD;;AAWEN,EAAAA,KAAK,CAACgB,SAAN,CAAgB,MAAM;AACxBN,IAAAA,WAAW,CAACE,OAAZ,CAAoBK,KAApB;AACD,GAFG,EAED,EAFC;AAIJ,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BAEH;AAAM,MAAA,MAAM,EAAC,OAAb;AAAA,6BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,QAA/B;AAAwC,QAAA,EAAE,EAAC,MAA3C;AAAkD,QAAA,GAAG,EAAEP,WAAvD;AAAoE,QAAA,QAAQ,EAAEC;AAA9E;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFG;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA7BD;;GAAMR,U;UAC+ED,gB;;;KAD/EC,U;AA+BN,eAAeA,UAAf","sourcesContent":["import React, {useRef} from 'react';\nimport { useGlobalContext } from '../context/ProductsContext';\n\n\nconst SearchForm = () => {\n    const {setSearchTerm, searchTerm, products, setProducts,filtered, oldProducts} = useGlobalContext()\n\n        const searchValue = useRef('')\n        // sets up reference with name searchValue . initial state is an empty array\n\n    const searchProduct = () => {\n\n        setSearchTerm(searchValue.current.value)\n \n            if (searchTerm != '') {\n        setProducts(filtered)\n              \n        console.log(products) }\n        // function which sets the searchTerm state as the current value of whatever the reference will be (coming up below)\n    }\n\n      React.useEffect(() => {\n    searchValue.current.focus()\n  }, [])\n\n  return (\n    <div className='SearchForm'>\n\n <form action=\"input\">\n   <input type=\"text\" placeholder=\"search\" id=\"name\" ref={searchValue} onChange={searchProduct}/>\n </form>\n    </div>\n  );\n};\n\nexport default SearchForm;\n"]},"metadata":{},"sourceType":"module"}