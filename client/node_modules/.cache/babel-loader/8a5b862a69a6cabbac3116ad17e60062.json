{"ast":null,"code":"var _jsxFileName = \"/home/matt/Documents/new-personal-projects/e-commerce/src/context/CartContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useCallback, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/React.createContext();\nconsole.log('AGH');\n\nconst AppProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [loading, isLoading] = useState(false);\n  const [cart, setCart] = useState([]);\n  const [show, setShow] = useState(false);\n  const url = 'http://localhost:8001/cart';\n\n  const getCart = async () => {\n    isLoading(true);\n\n    try {\n      const data = await axios.get(url);\n      const newCart = data.data;\n      setCart(newCart);\n      isLoading(false);\n      console.log(cart);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    console.log('AGH');\n    getCart();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n      value: {\n        loading,\n        cart,\n        setCart // handleClick\n\n      },\n      children: [\" \", children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(AppProvider, \"MapRtsM6w/j4xQoTtG7I4PPBL4k=\");\n\n_c = AppProvider;\nexport const useGlobalContext = () => {\n  _s2();\n\n  return useContext(AppContext);\n};\n\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { AppContext, AppProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"sources":["/home/matt/Documents/new-personal-projects/e-commerce/src/context/CartContext.js"],"names":["axios","React","useState","useCallback","useContext","useEffect","AppContext","createContext","console","log","AppProvider","children","loading","isLoading","cart","setCart","show","setShow","url","getCart","data","get","newCart","error","useGlobalContext"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,WAAzB,EAAsCC,UAAtC,EAAkDC,SAAlD,QAAkE,OAAlE;;;AAEA,MAAMC,UAAU,gBAAGL,KAAK,CAACM,aAAN,EAAnB;AACAC,OAAO,CAACC,GAAR,CAAY,KAAZ;;AACA,MAAMC,WAAW,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAE5B,QAAM,CAACC,OAAD,EAAUC,SAAV,IAAuBX,QAAQ,CAAC,KAAD,CAArC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,KAAD,CAAhC;AAEL,QAAMgB,GAAG,GACR,4BADD;;AAGA,QAAMC,OAAO,GAAG,YAAY;AACvBN,IAAAA,SAAS,CAAC,IAAD,CAAT;;AACA,QAAI;AACJ,YAAMO,IAAI,GAAG,MAAMpB,KAAK,CAACqB,GAAN,CAAUH,GAAV,CAAnB;AACA,YAAMI,OAAO,GAAGF,IAAI,CAACA,IAArB;AACAL,MAAAA,OAAO,CAACO,OAAD,CAAP;AACAT,MAAAA,SAAS,CAAC,KAAD,CAAT;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ;AAEC,KAPD,CAOG,OAAMS,KAAN,EAAa;AAChBf,MAAAA,OAAO,CAACC,GAAR,CAAYc,KAAZ;AACC;AAAE,GAXR;;AAaQlB,EAAAA,SAAS,CAAC,MAAK;AACXG,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACHU,IAAAA,OAAO;AACV,GAHW,EAGT,EAHS,CAAT;AAMH,sBAAM;AAAA,2BACV,QAAC,UAAD,CAAY,QAAZ;AAAqB,MAAA,KAAK,EAAE;AACxBP,QAAAA,OADwB;AAExBE,QAAAA,IAFwB;AAGxBC,QAAAA,OAHwB,CAIxB;;AAJwB,OAA5B;AAAA,sBAMKJ,QANL;AAAA;AAAA;AAAA;AAAA;AAAA;AADU,mBAAN;AAUP,CAtCD;;GAAMD,W;;KAAAA,W;AAwCN,OAAO,MAAMc,gBAAgB,GAAG,MAAM;AAAA;;AACtC,SAAOpB,UAAU,CAACE,UAAD,CAAjB;AACC,CAFM;;IAAMkB,gB;;AAIb,SAAQlB,UAAR,EAAoBI,WAApB","sourcesContent":["import axios from 'axios'\nimport React, {useState, useCallback, useContext, useEffect} from 'react'\n\nconst AppContext = React.createContext();\nconsole.log('AGH')\nconst AppProvider = ({children}) => {\n\n        const [loading, isLoading] = useState(false)\n        const [cart, setCart] = useState([])\n        const [show, setShow] = useState(false);\n\n   const url =\n    'http://localhost:8001/cart'\n\n   const getCart = async () => {\n        isLoading(true)\n        try {\n        const data = await axios.get(url);\n        const newCart = data.data\n        setCart(newCart)\n        isLoading(false)\n        console.log(cart)\n\n        }  catch(error) {\n        console.log(error);\n        } }\n\n           useEffect(()=> {\n               console.log('AGH')\n            getCart()\n        }, [])\n    \n\n        return<>\n    <AppContext.Provider value={{\n        loading,\n        cart,\n        setCart\n        // handleClick\n\n    }}> {children}\n    </AppContext.Provider>\n    </>\n}\n\nexport const useGlobalContext = () => {\nreturn useContext(AppContext)\n}\n\nexport {AppContext, AppProvider}"]},"metadata":{},"sourceType":"module"}