{"ast":null,"code":"var _jsxFileName = \"/home/matt/Documents/new-personal-projects/e-commerce/src/context/ProductsContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useCallback, useContext, useEffect } from 'react';\nimport reducer from './reducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst url = require('./db.json'); // api where data will be fetched from\n\n\nconsole.log(url);\nconst AppContext = /*#__PURE__*/React.createContext();\n\nconst AppProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [loading, isLoading] = useState(false); // sets up state for Loading component\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const [products, setProducts] = useState([]);\n\n  const getProducts = async () => {\n    isLoading(true);\n\n    try {\n      const data = // await axios.get(url);\n      console.log(data); // const newProducts = data.data;\n      // setProducts(newProducts)\n      // isLoading(false)\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  let oldProducts = products;\n  let filtered = products.filter(product => product.title.includes(searchTerm));\n  useEffect(() => {\n    getProducts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n      value: {\n        loading,\n        searchTerm,\n        products,\n        setProducts,\n        setSearchTerm,\n        getProducts,\n        filtered\n      },\n      children: [\" \", children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(AppProvider, \"vA0VzsZpIq/o5+e8i1FOmL/MRlI=\");\n\n_c = AppProvider;\nexport const useGlobalContext = () => {\n  _s2();\n\n  return useContext(AppContext);\n};\n\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { AppContext, AppProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"sources":["/home/matt/Documents/new-personal-projects/e-commerce/src/context/ProductsContext.js"],"names":["axios","React","useState","useCallback","useContext","useEffect","reducer","url","require","console","log","AppContext","createContext","AppProvider","children","loading","isLoading","searchTerm","setSearchTerm","products","setProducts","getProducts","data","error","oldProducts","filtered","filter","product","title","includes","useGlobalContext"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,WAAzB,EAAsCC,UAAtC,EAAkDC,SAAlD,QAAkE,OAAlE;AACA,OAAOC,OAAP,MAAoB,WAApB;;;;AAEA,MAAMC,GAAG,GAAEC,OAAO,CAAC,WAAD,CAAlB,C,CACA;;;AAEQC,OAAO,CAACC,GAAR,CAAYH,GAAZ;AAGR,MAAMI,UAAU,gBAAGV,KAAK,CAACW,aAAN,EAAnB;;AAEA,MAAMC,WAAW,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAE5B,QAAM,CAACC,OAAD,EAAUC,SAAV,IAAuBd,QAAQ,CAAC,KAAD,CAArC,CAF4B,CAG5B;;AACA,QAAM,CAACe,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,EAAD,CAAxC;;AAGA,QAAMmB,WAAW,GAAE,YAAY;AAC/BL,IAAAA,SAAS,CAAC,IAAD,CAAT;;AACA,QAAI;AACJ,YAAMM,IAAI,GACV;AACAb,MAAAA,OAAO,CAACC,GAAR,CAAYY,IAAZ,CAFA,CADI,CAIJ;AACA;AACA;AACC,KAPD,CAOG,OAAMC,KAAN,EAAa;AAChBd,MAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;AACC;AAAE,GAXH;;AAaA,MAAIC,WAAW,GAAGL,QAAlB;AAER,MAAIM,QAAQ,GAAGN,QAAQ,CAACO,MAAT,CAAiBC,OAAD,IAAYA,OAAO,CAACC,KAAR,CAAcC,QAAd,CAAuBZ,UAAvB,CAA5B,CAAf;AAEQZ,EAAAA,SAAS,CAAC,MAAK;AACXgB,IAAAA,WAAW;AACd,GAFQ,EAEN,EAFM,CAAT;AAQJ,sBAAM;AAAA,2BACN,QAAC,UAAD,CAAY,QAAZ;AAAqB,MAAA,KAAK,EAAE;AACxBN,QAAAA,OADwB;AAExBE,QAAAA,UAFwB;AAGxBE,QAAAA,QAHwB;AAIxBC,QAAAA,WAJwB;AAKxBF,QAAAA,aALwB;AAMxBG,QAAAA,WANwB;AAOxBI,QAAAA;AAPwB,OAA5B;AAAA,sBAQKX,QARL;AAAA;AAAA;AAAA;AAAA;AAAA;AADM,mBAAN;AAYH,CA7CD;;GAAMD,W;;KAAAA,W;AA+CN,OAAO,MAAMiB,gBAAgB,GAAG,MAAM;AAAA;;AACtC,SAAO1B,UAAU,CAACO,UAAD,CAAjB;AACC,CAFM;;IAAMmB,gB;;AAIb,SAAQnB,UAAR,EAAoBE,WAApB","sourcesContent":["import axios from 'axios'\nimport React, {useState, useCallback, useContext, useEffect} from 'react'\nimport reducer from './reducer'\n\nconst url =require('./db.json')\n// api where data will be fetched from\n\n        console.log(url)\n\n\nconst AppContext = React.createContext();\n\nconst AppProvider = ({children}) => {\n\n        const [loading, isLoading] = useState(false)\n        // sets up state for Loading component\n        const [searchTerm, setSearchTerm] = useState('')\n        const [products, setProducts] = useState([])\n\n    \n        const getProducts =async () => {\n        isLoading(true)\n        try {\n        const data = \n        // await axios.get(url);\n        console.log(data)\n        // const newProducts = data.data;\n        // setProducts(newProducts)\n        // isLoading(false)\n        }  catch(error) {\n        console.log(error);\n        } }\n\n        let oldProducts = products;\n\nlet filtered = products.filter((product)=> product.title.includes(searchTerm))\n\n        useEffect(()=> {\n            getProducts()\n        }, [])\n\n      \n\n        \n\n    return<>\n    <AppContext.Provider value={{\n        loading,\n        searchTerm,\n        products,\n        setProducts,\n        setSearchTerm,\n        getProducts,\n        filtered\n    }}> {children}\n    </AppContext.Provider>\n    </>\n}\n\nexport const useGlobalContext = () => {\nreturn useContext(AppContext)\n}\n\nexport {AppContext, AppProvider}"]},"metadata":{},"sourceType":"module"}