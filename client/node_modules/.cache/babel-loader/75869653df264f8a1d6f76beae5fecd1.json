{"ast":null,"code":"var _jsxFileName = \"/home/matt/Documents/new-personal-projects/simple-cocktails/src/components/SearchForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { useGlobalContext } from './context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchForm = () => {\n  _s();\n\n  const {\n    setSearchTerm,\n    searchTerm\n  } = useGlobalContext();\n  const searchValue = useRef(''); // sets up reference with name searchValue . initial state is an empty array\n\n  const searchCocktail = () => {\n    setSearchTerm(searchValue.current.value); // function which sets the searchTerm state as the current value of whatever the reference will be (coming up below)\n  };\n\n  React.useEffect(() => {\n    searchValue.current.focus();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SearchForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search your favourite cocktails\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"input\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: searchValue,\n        onChange: searchCocktail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 2\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchForm, \"J6RgjIEu9eiC32brFvrT+XZZtDw=\", false, function () {\n  return [useGlobalContext];\n});\n\n_c = SearchForm;\nexport default SearchForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchForm\");","map":{"version":3,"sources":["/home/matt/Documents/new-personal-projects/simple-cocktails/src/components/SearchForm.js"],"names":["React","useRef","useGlobalContext","SearchForm","setSearchTerm","searchTerm","searchValue","searchCocktail","current","value","useEffect","focus"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,MAAf,QAA4B,OAA5B;AACA,SAASC,gBAAT,QAAiC,WAAjC;;;AAGA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAM;AAACC,IAAAA,aAAD;AAAgBC,IAAAA;AAAhB,MAA8BH,gBAAgB,EAApD;AAEI,QAAMI,WAAW,GAAGL,MAAM,CAAC,EAAD,CAA1B,CAHiB,CAIjB;;AAEJ,QAAMM,cAAc,GAAG,MAAM;AACzBH,IAAAA,aAAa,CAACE,WAAW,CAACE,OAAZ,CAAoBC,KAArB,CAAb,CADyB,CAEzB;AACH,GAHD;;AAKET,EAAAA,KAAK,CAACU,SAAN,CAAgB,MAAM;AACxBJ,IAAAA,WAAW,CAACE,OAAZ,CAAoBG,KAApB;AACD,GAFG,EAED,EAFC;AAIJ,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEH;AAAM,MAAA,MAAM,EAAC,OAAb;AAAA,6BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,MAAtB;AAA6B,QAAA,GAAG,EAAEL,WAAlC;AAA+C,QAAA,QAAQ,EAAEC;AAAzD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFG;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAxBD;;GAAMJ,U;UACkCD,gB;;;KADlCC,U;AA0BN,eAAeA,UAAf","sourcesContent":["import React, {useRef} from 'react';\nimport { useGlobalContext } from './context';\n\n\nconst SearchForm = () => {\n    const {setSearchTerm, searchTerm} = useGlobalContext()\n\n        const searchValue = useRef('')\n        // sets up reference with name searchValue . initial state is an empty array\n\n    const searchCocktail = () => {\n        setSearchTerm(searchValue.current.value)\n        // function which sets the searchTerm state as the current value of whatever the reference will be (coming up below)\n    }\n\n      React.useEffect(() => {\n    searchValue.current.focus()\n  }, [])\n\n  return (\n    <div className='SearchForm'>\n    <h2>Search your favourite cocktails</h2>\n <form action=\"input\">\n   <input type=\"text\" id=\"name\" ref={searchValue} onChange={searchCocktail}/>\n   {/*  */}\n </form>\n    </div>\n  );\n};\n\nexport default SearchForm;\n"]},"metadata":{},"sourceType":"module"}